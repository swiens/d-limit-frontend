[{"/Users/susan/workspace/d-limit-frontend/src/index.js":"1","/Users/susan/workspace/d-limit-frontend/src/App.js":"2","/Users/susan/workspace/d-limit-frontend/src/reportWebVitals.js":"3","/Users/susan/workspace/d-limit-frontend/src/components/auth/Login.js":"4","/Users/susan/workspace/d-limit-frontend/src/components/contacts/EditContactForm.js":"5","/Users/susan/workspace/d-limit-frontend/src/components/auth/Register.js":"6","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDrinkProvider.js":"7","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactForm.js":"8","/Users/susan/workspace/d-limit-frontend/src/components/user/EditUserForm.js":"9","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDetailsPage.js":"10","/Users/susan/workspace/d-limit-frontend/src/components/drinking/ResultsPage.js":"11","/Users/susan/workspace/d-limit-frontend/src/components/user/UserProvider.js":"12","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventList.js":"13","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkingPage.js":"14","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkList.js":"15","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactList.js":"16","/Users/susan/workspace/d-limit-frontend/src/components/home/Home.js":"17","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactProvider.js":"18","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/Event.js":"19"},{"size":581,"mtime":1615994457723,"results":"20","hashOfConfig":"21"},{"size":3019,"mtime":1616375093186,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1615994457722,"results":"23","hashOfConfig":"21"},{"size":2981,"mtime":1616372111790,"results":"24","hashOfConfig":"21"},{"size":2569,"mtime":1615994457729,"results":"25","hashOfConfig":"21"},{"size":4624,"mtime":1616374687401,"results":"26","hashOfConfig":"21"},{"size":3148,"mtime":1616432411017,"results":"27","hashOfConfig":"21"},{"size":1554,"mtime":1616375805318,"results":"28","hashOfConfig":"21"},{"size":2509,"mtime":1615994457734,"results":"29","hashOfConfig":"21"},{"size":1127,"mtime":1616432925952,"results":"30","hashOfConfig":"21"},{"size":2625,"mtime":1615994457736,"results":"31","hashOfConfig":"21"},{"size":552,"mtime":1616377077638,"results":"32","hashOfConfig":"21"},{"size":569,"mtime":1616380312763,"results":"33","hashOfConfig":"21"},{"size":1569,"mtime":1615994457737,"results":"34","hashOfConfig":"21"},{"size":1670,"mtime":1615994457735,"results":"35","hashOfConfig":"21"},{"size":1098,"mtime":1615994457729,"results":"36","hashOfConfig":"21"},{"size":1323,"mtime":1615994457726,"results":"37","hashOfConfig":"21"},{"size":1523,"mtime":1616378144582,"results":"38","hashOfConfig":"21"},{"size":344,"mtime":1616381585077,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gvt8g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/susan/workspace/d-limit-frontend/src/index.js",[],["86","87"],"/Users/susan/workspace/d-limit-frontend/src/App.js",["88","89"],"/Users/susan/workspace/d-limit-frontend/src/reportWebVitals.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/auth/Login.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/contacts/EditContactForm.js",["90"],"import React, { useRef, useContext, useEffect } from \"react\";\nimport {ContactContext} from \"./ContactProvider\"\nimport \"./contact.css\"\n\nexport const EditContactForm = (props) => {\n  //pulling functions and data out of my provider\n  const {editContact, currentContact, getContact, setCurrentContact} = useContext(ContactContext)\n  \n  //reffs that will reference my inputs so i can acces their values\n  const name = useRef(null);\n  const phoneNumber = useRef(null);\n\n  // useEffect will run one time when the page loads because im passing empty array to it\n  useEffect(() => {\n      getContact(props.match.params.contactId)\n  }, [])\n\n  //function i will use to actually update the current contact\n  const editCurrentContact = (e) => {\n    e.preventDefault();\n    editContact({\n      name: name.current.value,\n      phoneNumber: phoneNumber.current.value,\n      id: currentContact.id,\n      userId: parseInt(localStorage.getItem(\"app_user_id\"))\n    })\n      .then(() => props.history.push(\"/contacts\"))\n  }\n\n  const handleControlledInputChange = (event) => {\n    /*\n        When changing a state object or array, always create a new one\n        and change state instead of modifying current one\n    */\n    const newCurrentContact = Object.assign({}, currentContact)\n    newCurrentContact[event.target.name] = event.target.value\n    setCurrentContact(newCurrentContact)\n}\n\n  console.log(currentContact)\n\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <form className=\"contact--form\" onSubmit={editCurrentContact}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">\n          Please Edit Contact\n        </h1>\n        <fieldset>\n          <label htmlFor=\"name\"> Name </label>\n          <input\n            ref={name}\n            type=\"text\"\n            name=\"name\"\n            value={currentContact.name}\n            onChange={handleControlledInputChange}\n            className=\"form-control\"\n            placeholder=\"Name\"\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"phoneNumber\"> Phone Number </label>\n          <input\n            ref={phoneNumber}\n            type=\"text\"\n            name=\"phoneNumber\"\n            value={currentContact.phoneNumber}\n            className=\"form-control\"\n            placeholder=\"Phone Number\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\"> Edit Contact </button>\n        </fieldset>\n      </form>\n    </main>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/auth/Register.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDrinkProvider.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactForm.js",["91"],"/Users/susan/workspace/d-limit-frontend/src/components/user/EditUserForm.js",["92"],"import React, { useRef, useContext, useEffect } from \"react\";\nimport {ContactContext} from \"../contacts/ContactProvider\"\n//import \"./user.css\"\n\nexport const EditContactForm = (props) => {\n  //pulling functions and data out of my provider\n  const {editContact, currentContact, getContact, setCurrentContact} = useContext(ContactContext)\n  \n  //reffs that will reference my inputs so i can acces their values\n  const name = useRef(null);\n  const phoneNumber = useRef(null);\n\n  // useEffect will run one time when the page loads because im passing empty array to it\n  useEffect(() => {\n      getContact(props.match.params.contactId)\n  }, [])\n\n  //function i will use to actually update the current contact\n  const editCurrentContact = (e) => {\n    e.preventDefault();\n    editContact({\n      name: name.current.value,\n      phoneNumber: phoneNumber.current.value,\n      id: currentContact.id\n    })\n      .then(() => props.history.push(\"/\"))\n  }\n\n  const handleControlledInputChange = (event) => {\n    /*\n        When changing a state object or array, always create a new one\n        and change state instead of modifying current one\n    */\n    const newCurrentContact = Object.assign({}, currentContact)\n    newCurrentContact[event.target.name] = event.target.value\n    setCurrentContact(newCurrentContact)\n}\n\n  console.log(currentContact)\n\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <form className=\"contact--form\" onSubmit={editCurrentContact}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">\n          Please Edit Contact\n        </h1>\n        <fieldset>\n          <label htmlFor=\"name\"> Name </label>\n          <input\n            ref={name}\n            type=\"text\"\n            name=\"name\"\n            value={currentContact.name}\n            onChange={handleControlledInputChange}\n            className=\"form-control\"\n            placeholder=\"Name\"\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"phoneNumber\"> Phone Number </label>\n          <input\n            ref={phoneNumber}\n            type=\"text\"\n            name=\"phoneNumber\"\n            value={currentContact.phoneNumber}\n            className=\"form-control\"\n            placeholder=\"Phone Number\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\"> Edit Contact </button>\n        </fieldset>\n      </form>\n    </main>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDetailsPage.js",["93"],"/Users/susan/workspace/d-limit-frontend/src/components/drinking/ResultsPage.js",["94","95"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { EventContext } from \"../eventDrinks/EventDrinkProvider\";\nimport moment from \"moment\";\nimport { UserContext } from \"../user/UserProvider\";\nimport \"./drinking.css\"\n\nexport const ResultsPage = (props) => {\n  const { endEvent, getEventDrinks, eventDrinks, event, getEvent } = useContext(\n    EventContext\n  );\n  const { user, getUser } = useContext(UserContext);\n  const [result, setResult] = useState(0)\n  \n  const eventId = parseInt(props.match.params.eventId);\n\n  useEffect(() => {\n    getUser().then(\n      getEvent().then(\n        getEventDrinks(eventId)\n      )\n    );\n  }, []);\n\n  // this useEffect is watching my variables, user, event, eventDrinks to see if they change in value\n  //for my calculation\n  useEffect(() => {\n    //this is where i will do my calculations\n    // get hours since event started \n    const now = moment()\n    const startTime = moment(parseInt(event.startTime))\n    const timeSinceEventInHours = now.diff(startTime, \"hours\", true)\n    // according to Widmark calculation. Metabolising rate is -0.015 every hour that goes by.\n    const bacTimeAdjust = 0.015\n    const timeAdjustForBac = timeSinceEventInHours * bacTimeAdjust\n\n    console.log(timeSinceEventInHours)\n    const bodyWeightInGrams = user.weight * 454\n    const alcoholConsumedInGrams = eventDrinks.length * 14\n    const gender = 0.55\n    const BAC = ((alcoholConsumedInGrams / (bodyWeightInGrams * gender))  * 100) - timeAdjustForBac\n    setResult(BAC.toFixed(3))\n  }, [user, event, eventDrinks])\n\n\n\n  const endEventButton = () => {\n    endEvent(eventId).then(() => {\n      return props.history.push(\"/\");\n    });\n  };\n\n  const continueDrinkingButton = () => {\n    return props.history.push(`/drinking/${eventId}`);\n  };\n\n  if(result<0.08) {\n      return(\n        <section>\n        <h1 class=\"results--title\">Results</h1>\n        <h2>You are good to drive, your Blood Alcohol Concentration is {result}</h2>\n        <button class=\"continue--drinking--button\" onClick={continueDrinkingButton}>Continue Drinking</button>\n        <button class=\"end--drinking--button\" onClick={endEventButton}>End Event</button>\n      </section>\n      )\n\n  }\n  else {\n    return (\n        <section>\n          <h1 class=\"results--title\">Results </h1>\n          <h2> You Can't drive, your Blood Acohol Concentration is {result}</h2>\n          <button class=\"continue--drinking--button\" onClick={continueDrinkingButton}>Continue Drinking</button>\n          <button class=\"end--drinking--button\" onClick={endEventButton}>End Event</button>\n        </section>\n      );\n  }\n  \n};\n","/Users/susan/workspace/d-limit-frontend/src/components/user/UserProvider.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventList.js",["96"],"/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkingPage.js",["97"],"import React, {useContext,useEffect, useRef} from \"react\"\nimport {EventContext} from \"../eventDrinks/EventDrinkProvider\"\nimport moment from \"moment\"\nimport \"./drinking.css\"\n\n\nexport const DrinkingPage = (props) => {\n    const {addEventDrink, drinks, getDrinks} = useContext(EventContext)\n\n    const drink = useRef(null)\n    const eventId = parseInt(props.match.params.eventId)\n    useEffect(() => {\n        getDrinks()\n    }, [])\n// i need to get an event id\n    const eventDrink = (event) => {\n        const drinkId = parseInt(event.target.id)\n        \n        const newEventDrink = {\n            drinkId: drinkId,\n            eventId: eventId,\n            timeDrank: moment.now()  \n        }\n        addEventDrink(newEventDrink)\n    \n    }\n\n    const editDrinks = () => {\n        return props.history.push(`/drinking/drinks/${eventId}`);\n    };\n\n    const canIDriveButton = () => {\n        return props.history.push(`/drinking/results/${eventId}`);\n    };\n\n    return(\n    \n        <section>\n        <h1 class=\"what-are-you-drinking-title\">What are you drinking?</h1> \n        {\n            drinks.map(d => (\n                <div>\n                <button class=\"alcohol--choice--button\" onClick={eventDrink} key={d.id} ref={drink} value={d.id} id={d.id}>\n                    {d.type}\n                </button>\n                </div>\n            ))\n\n        }\n        <button class=\"can-i-drive-button\" onClick={canIDriveButton}>Can I drive?</button>\n        <button class=\"edit-drinks-button\" onClick={editDrinks}>View/Edit Drinks</button>\n        </section>\n    )\n}\n","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkList.js",["98"],"import React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { EventContext } from \"../eventDrinks/EventDrinkProvider\";\nimport moment from \"moment\";\nimport \"./drinking.css\"\n\nexport const DrinkList = (props) => {\n  const {\n    getEventDrinks,\n    eventDrinks,\n    getDrinks,\n    drinks,\n    deleteEventDrink,\n  } = useContext(EventContext);\n\n  const eventId = parseInt(props.match.params.eventId);\n\n  useEffect(() => {\n    getEventDrinks(eventId);\n    getDrinks();\n  }, []);\n\n  const deleteDrinkButton = (event) => {\n    const id = event.target.id;\n    deleteEventDrink(id, eventId);\n  };\n  const continueDrinkingButton = () => {\n    return props.history.push(`/drinking/${eventId}`);\n  };\n\n  if (drinks.length === 0) return false;\n  return (\n    <div>\n      <h1 class=\"drink-list-title\"> Drink List</h1>\n\n      <button class=\"continue--drinking--button\" onClick={continueDrinkingButton}>Continue Drinking</button>\n\n      <div className=\"drinks\">\n        {eventDrinks.map((currentEventDrink) => {\n          const foundDrink = drinks.find((currentDrink) => {\n            return currentDrink.id === currentEventDrink.drinkId;\n          });\n          return (\n            <div>\n              <hr />\n              <div>{foundDrink.type} </div>\n              <div>\n                \n                {moment(parseInt(currentEventDrink.timeDrank)).format(\n                  \"LTS\"\n                )}\n              </div>\n              <button class=\"delete-drink-button\" onClick={deleteDrinkButton} id={currentEventDrink.id}>\n                Delete Drink{\" \"}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactList.js",["99"],"import React, { useContext, useEffect } from \"react\"\nimport { ContactContext } from \"./ContactProvider\"\nimport { Link } from \"react-router-dom\"\nimport \"./contact.css\"\n\nexport const ContactList = props => {\n    const { contacts, getContacts } = useContext(ContactContext)\n\n    useEffect(() => {\n        getContacts()\n    }, [])\n\n    return (\n        <div className=\"contacts\">\n            <h1 className=\"contacts-title\">Contacts</h1>\n\n            <button onClick={() => props.history.push(\"/create-contact\")}>\n                Create Contact\n            </button>\n\n            <button onClick={() => props.history.push(\"/\")}>\n                Home Page\n            </button>\n\n            <article className=\"contactList\">\n                {\n                    contacts.map(contact => {\n                        return <Link key={contact.id} to={`/contacts/${contact.id}`}>\n                            <h3>{contact.name}</h3>\n                            <h3>{contact.phoneNumber}</h3>\n                        </Link>\n                    })\n                }\n            </article>\n        </div>\n    )\n}","/Users/susan/workspace/d-limit-frontend/src/components/home/Home.js",["100","101"],"import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { EventContext } from \"../eventDrinks/EventDrinkProvider\";\nimport \"./home.css\" \n\nexport const Home = (props) => {\n  const { addEvent, getEvents } = useContext(EventContext);\n\n  const currentEventId = localStorage.getItem(\"currentEvent\");\n\n  const startDrinking = () => {\n    addEvent().then((newEvent) => {\n      return props.history.push(`/drinking/${newEvent.id}`);\n    });\n  };\n\n  const continueDrinking = () => {\n      return props.history.push(`/drinking/${currentEventId}`);\n  };\n\n  \n  return (\n    <section>\n      <h1 className=\"home-title\">Home Page</h1>\n      <div>\n          <Link className=\"edit-profile-button\" to=\"/edit-profile\">Edit Profile</Link>\n      </div>\n      <div>\n          <Link className=\"edit-contacts-button\" to=\"/contacts\">Edit Contacts</Link>\n      </div>\n      <div>\n        {currentEventId && (\n          <button className=\"continue-drinking-button\" onClick={continueDrinking} id=\"continue--drinking\">\n            Continue Drinking\n          </button>\n        )}\n\n        {!currentEventId && (\n          <button className=\"start--drinking--button\" onClick={startDrinking} id=\"start--drinking\">\n            Start Drinking\n          </button>\n        )}  \n      </div>\n    </section>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactProvider.js",["102"],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/Event.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":12,"column":9,"nodeType":"109","messageId":"110","endLine":12,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":16,"column":6,"nodeType":"114","endLine":16,"endColumn":8,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"116","line":1,"column":37,"nodeType":"109","messageId":"110","endLine":1,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":16,"column":6,"nodeType":"114","endLine":16,"endColumn":8,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"118","line":20,"column":6,"nodeType":"114","endLine":20,"endColumn":8,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"120","line":1,"column":40,"nodeType":"109","messageId":"110","endLine":1,"endColumn":46},{"ruleId":"112","severity":1,"message":"121","line":22,"column":6,"nodeType":"114","endLine":22,"endColumn":8,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":11,"column":9,"nodeType":"114","endLine":11,"endColumn":11,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"125","line":14,"column":8,"nodeType":"114","endLine":14,"endColumn":10,"suggestions":"126"},{"ruleId":"112","severity":1,"message":"118","line":21,"column":6,"nodeType":"114","endLine":21,"endColumn":8,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":11,"column":8,"nodeType":"114","endLine":11,"endColumn":10,"suggestions":"129"},{"ruleId":"107","severity":1,"message":"116","line":1,"column":29,"nodeType":"109","messageId":"110","endLine":1,"endColumn":38},{"ruleId":"107","severity":1,"message":"130","line":7,"column":21,"nodeType":"109","messageId":"110","endLine":7,"endColumn":30},{"ruleId":"107","severity":1,"message":"116","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'EditUserForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getContact' and 'props.match.params.contactId'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'useEffect' is defined but never used.",["134"],"React Hook useEffect has missing dependencies: 'eventId', 'getDrinks', and 'getEventDrinks'. Either include them or remove the dependency array.",["135"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'eventId', 'getEvent', 'getEventDrinks', and 'getUser'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'getDrinks'. Either include it or remove the dependency array.",["138"],["139"],"React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.",["140"],"'getEvents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"144","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getContact, props.match.params.contactId]",{"range":"155","text":"156"},{"range":"157","text":"156"},"Update the dependencies array to be: [eventId, getDrinks, getEventDrinks]",{"range":"158","text":"159"},"Update the dependencies array to be: [eventId, getEvent, getEventDrinks, getUser]",{"range":"160","text":"161"},"Update the dependencies array to be: [getEvents]",{"range":"162","text":"163"},"Update the dependencies array to be: [getDrinks]",{"range":"164","text":"165"},{"range":"166","text":"159"},"Update the dependencies array to be: [getContacts]",{"range":"167","text":"168"},[626,628],"[getContact, props.match.params.contactId]",[635,637],[450,452],"[eventId, getDrinks, getEventDrinks]",[657,659],"[eventId, getEvent, getEventDrinks, getUser]",[274,276],"[getEvents]",[426,428],"[getDrinks]",[489,491],[323,325],"[getContacts]"]