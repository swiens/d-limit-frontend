[{"/Users/susan/workspace/d-limit-frontend/src/index.js":"1","/Users/susan/workspace/d-limit-frontend/src/App.js":"2","/Users/susan/workspace/d-limit-frontend/src/reportWebVitals.js":"3","/Users/susan/workspace/d-limit-frontend/src/components/auth/Login.js":"4","/Users/susan/workspace/d-limit-frontend/src/components/contacts/EditContactForm.js":"5","/Users/susan/workspace/d-limit-frontend/src/components/auth/Register.js":"6","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDrinkProvider.js":"7","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactForm.js":"8","/Users/susan/workspace/d-limit-frontend/src/components/user/EditUserForm.js":"9","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDetailsPage.js":"10","/Users/susan/workspace/d-limit-frontend/src/components/drinking/ResultsPage.js":"11","/Users/susan/workspace/d-limit-frontend/src/components/user/UserProvider.js":"12","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventList.js":"13","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkingPage.js":"14","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkList.js":"15","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactList.js":"16","/Users/susan/workspace/d-limit-frontend/src/components/home/Home.js":"17","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactProvider.js":"18","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/Event.js":"19"},{"size":581,"mtime":1615994457723,"results":"20","hashOfConfig":"21"},{"size":3196,"mtime":1616547230731,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1615994457722,"results":"23","hashOfConfig":"21"},{"size":2981,"mtime":1616372111790,"results":"24","hashOfConfig":"21"},{"size":2484,"mtime":1616458793717,"results":"25","hashOfConfig":"21"},{"size":4624,"mtime":1616374687401,"results":"26","hashOfConfig":"21"},{"size":3251,"mtime":1616556181836,"results":"27","hashOfConfig":"21"},{"size":1494,"mtime":1616458181005,"results":"28","hashOfConfig":"21"},{"size":2691,"mtime":1616545345823,"results":"29","hashOfConfig":"21"},{"size":1237,"mtime":1616556057791,"results":"30","hashOfConfig":"21"},{"size":3544,"mtime":1616617081257,"results":"31","hashOfConfig":"21"},{"size":986,"mtime":1616545651705,"results":"32","hashOfConfig":"21"},{"size":549,"mtime":1616614985508,"results":"33","hashOfConfig":"21"},{"size":1533,"mtime":1616461167783,"results":"34","hashOfConfig":"21"},{"size":1557,"mtime":1616462512393,"results":"35","hashOfConfig":"21"},{"size":1113,"mtime":1616457667529,"results":"36","hashOfConfig":"21"},{"size":1323,"mtime":1616546371414,"results":"37","hashOfConfig":"21"},{"size":1780,"mtime":1616629889725,"results":"38","hashOfConfig":"21"},{"size":344,"mtime":1616381585077,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gvt8g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/susan/workspace/d-limit-frontend/src/index.js",[],["86","87"],"/Users/susan/workspace/d-limit-frontend/src/App.js",["88"],"/Users/susan/workspace/d-limit-frontend/src/reportWebVitals.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/auth/Login.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/contacts/EditContactForm.js",["89"],"import React, { useRef, useContext, useEffect } from \"react\";\nimport {ContactContext} from \"./ContactProvider\"\nimport \"./contact.css\"\n\nexport const EditContactForm = (props) => {\n  //pulling functions and data out of my provider\n  const {editContact, currentContact, getContact, setCurrentContact} = useContext(ContactContext)\n  \n  //reffs that will reference my inputs so i can acces their values\n  const name = useRef(null);\n  const phoneNumber = useRef(null);\n\n  // useEffect will run one time when the page loads because im passing empty array to it\n  useEffect(() => {\n      getContact(props.match.params.contactId)\n  }, [])\n\n  //function i will use to actually update the current contact\n  const editCurrentContact = (e) => {\n    e.preventDefault();\n    editContact({\n      name: name.current.value,\n      phone: phoneNumber.current.value,\n      id: currentContact.id\n    })\n      .then(() => props.history.push(\"/contacts\"))\n  }\n\n  const handleControlledInputChange = (event) => {\n    /*\n        When changing a state object or array, always create a new one\n        and change state instead of modifying current one\n    */\n    const newCurrentContact = Object.assign({}, currentContact)\n    newCurrentContact[event.target.name] = event.target.value\n    setCurrentContact(newCurrentContact)\n}\n\n  console.log(currentContact)\n\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <form className=\"contact--form\" onSubmit={editCurrentContact}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">\n          Please Edit Contact\n        </h1>\n        <fieldset>\n          <label htmlFor=\"name\"> Name </label>\n          <input\n            ref={name}\n            type=\"text\"\n            name=\"name\"\n            value={currentContact.name}\n            onChange={handleControlledInputChange}\n            className=\"form-control\"\n            placeholder=\"Name\"\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"phone\"> Phone Number </label>\n          <input\n            ref={phoneNumber}\n            type=\"text\"\n            name=\"phone\"\n            value={currentContact.phone}\n            className=\"form-control\"\n            placeholder=\"Phone Number\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\"> Edit Contact </button>\n        </fieldset>\n      </form>\n    </main>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/auth/Register.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDrinkProvider.js",["90"],"/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactForm.js",["91"],"import React, { useRef, useContext, useEffect } from \"react\";\nimport {ContactContext} from \"./ContactProvider\"\nimport \"./contact.css\"\n\nexport const ContactForm = (props) => {\n  const {addContact} = useContext(ContactContext)\n  const name = useRef(null);\n  const phoneNumber = useRef(null);\n\n  const createNewContact = (e) => {\n    e.preventDefault();\n    addContact({\n      name: name.current.value,\n      phone: phoneNumber.current.value\n        })\n      .then(() => props.history.push(\"/\"))\n  }\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <form className=\"contact--form\" onSubmit={createNewContact}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">\n          Please Add A Designated Driver Contact\n        </h1>\n        <fieldset>\n          <label htmlFor=\"name\"> Name </label>\n          <input\n            ref={name}\n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\"\n            placeholder=\"Name\"\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"phoneNumber\"> Phone Number </label>\n          <input\n            ref={phoneNumber}\n            type=\"text\"\n            name=\"phoneNumber\"\n            className=\"form-control\"\n            placeholder=\"Phone Number\"\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\"> Add Contact </button>\n        </fieldset>\n      </form>\n    </main>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/user/EditUserForm.js",["92"],"import React, { useRef, useContext, useEffect } from \"react\";\nimport {UserContext} from \"./UserProvider\"\n\nexport const EditUserForm = (props) => {\n  //pulling functions and data out of my provider\n  const {user, getUser, editUser, setUser} = useContext(UserContext)\n  console.log(user)\n  //reffs that will reference my inputs so i can acces their values\n  const age = useRef(1);\n  const weight = useRef(null);\n  const height = useRef(null);\n\n  // useEffect will run one time when the page loads because im passing empty array to it\n  useEffect(() => {\n      getUser()\n  }, [])\n\n  //function i will use to actually update the current contact\n  const editCurrentUser = (e) => {\n    e.preventDefault();\n    editUser({\n      age: age.current.value,\n      weight: weight.current.value,\n      height: height.current.value\n    })\n      .then(() => props.history.push(\"/\"))\n  }\n\n  const handleControlledInputChange = (event) => {\n    /*\n        When changing a state object or array, always create a new one\n        and change state instead of modifying current one\n    */\n    const newUser = Object.assign({}, user)\n    newUser[event.target.name] = event.target.value\n    setUser(newUser)\n  }\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <form className=\"contact--form\" onSubmit={editCurrentUser}>\n        <h1 className=\"h3 mb-3 font-weight-normal\">\n          Please Edit Your Profile\n        </h1>\n        <fieldset>\n          <label htmlFor=\"age\"> Age </label>\n          <input\n            ref={age}\n            type=\"text\"\n            name=\"age\"\n            value={user.age}\n            className=\"form-control\"\n            placeholder=\"Age\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"weight\"> Weight </label>\n          <input\n            ref={weight}\n            type=\"text\"\n            name=\"weight\"\n            value={user.weight}\n            className=\"form-control\"\n            placeholder=\"weight\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"height\"> Height </label>\n          <input\n            ref={height}\n            type=\"text\"\n            name=\"height\"\n            value={user.height}\n            className=\"form-control\"\n            placeholder=\"height\"\n            onChange={handleControlledInputChange}\n            required\n            autoFocus\n          />\n        </fieldset>\n        <fieldset>\n          <button type=\"submit\"> Edit Profile </button>\n        </fieldset>\n      </form>\n    </main>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventDetailsPage.js",["93"],"/Users/susan/workspace/d-limit-frontend/src/components/drinking/ResultsPage.js",["94","95"],"/Users/susan/workspace/d-limit-frontend/src/components/user/UserProvider.js",[],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/EventList.js",["96"],"/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkingPage.js",["97","98"],"import React, {useContext,useEffect, useRef} from \"react\"\nimport {EventContext} from \"../eventDrinks/EventDrinkProvider\"\nimport moment from \"moment\"\nimport \"./drinking.css\"\n\n\nexport const DrinkingPage = (props) => {\n    const {addEventDrink, drinks, getDrinks} = useContext(EventContext)\n\n    const drink = useRef(null)\n    const eventId = parseInt(props.match.params.eventId)\n    useEffect(() => {\n        getDrinks()\n    }, [])\n// i need to get an event id\n    const eventDrink = (event) => {\n        const drinkId = parseInt(event.target.id)\n        \n        const newEventDrink = {\n            drink_id: drinkId,\n            event_id: eventId,\n        }\n        addEventDrink(newEventDrink)\n    \n    }\n\n    const editDrinks = () => {\n        return props.history.push(`/drinking/drinks/${eventId}`);\n    };\n\n    const canIDriveButton = () => {\n        return props.history.push(`/drinking/results/${eventId}`);\n    };\n\n    return(\n    \n        <section>\n        <h1 class=\"what-are-you-drinking-title\">What are you drinking?</h1> \n        {\n            drinks.map(d => (\n                <div>\n                <button class=\"alcohol--choice--button\" onClick={eventDrink} key={d.id} ref={drink} value={d.id} id={d.id}>\n                    {d.type}\n                </button>\n                </div>\n            ))\n\n        }\n        <button class=\"can-i-drive-button\" onClick={canIDriveButton}>Can I drive?</button>\n        <button class=\"edit-drinks-button\" onClick={editDrinks}>View/Edit Drinks</button>\n        </section>\n    )\n}\n","/Users/susan/workspace/d-limit-frontend/src/components/drinking/DrinkList.js",["99"],"import React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { EventContext } from \"../eventDrinks/EventDrinkProvider\";\nimport moment from \"moment\";\nimport \"./drinking.css\"\n\nexport const DrinkList = (props) => {\n  const {\n    getEventDrinks,\n    eventDrinks,\n    getDrinks,\n    drinks,\n    deleteEventDrink,\n  } = useContext(EventContext);\n\n  const eventId = parseInt(props.match.params.eventId);\n\n  useEffect(() => {\n    getEventDrinks(eventId);\n    getDrinks();\n  }, []);\n\n  const deleteDrinkButton = (event) => {\n    const id = event.target.id;\n    deleteEventDrink(id, eventId);\n  };\n  const continueDrinkingButton = () => {\n    return props.history.push(`/drinking/${eventId}`);\n  };\nconsole.log(eventDrinks)\n  if (drinks.length === 0) return false;\n  return (\n    <div>\n      <h1 class=\"drink-list-title\"> Drink List</h1>\n\n      <button class=\"continue--drinking--button\" onClick={continueDrinkingButton}>Continue Drinking</button>\n\n      <div className=\"drinks\">\n        {eventDrinks.map((currentEventDrink) => {\n          return (\n            <div>\n              <hr />\n              <div>{currentEventDrink.drink.type} </div>\n              <div>\n                \n                {moment(currentEventDrink.time_drank).format(\n                  \"LTS\"\n                )}\n              </div>\n              <button class=\"delete-drink-button\" onClick={deleteDrinkButton} id={currentEventDrink.id}>\n                Delete Drink{\" \"}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactList.js",["100"],"import React, { useContext, useEffect } from \"react\"\nimport { ContactContext } from \"./ContactProvider\"\nimport { Link } from \"react-router-dom\"\nimport \"./contact.css\"\n\nexport const ContactList = props => {\n    const { contacts, getContacts } = useContext(ContactContext)\n\n    useEffect(() => {\n        getContacts()\n    }, [])\nconsole.log(contacts)\n    return (\n        <div className=\"contacts\">\n            <h1 className=\"contacts-title\">Contacts</h1>\n\n            <button onClick={() => props.history.push(\"/create-contact\")}>\n                Create Contact\n            </button>\n\n            <button onClick={() => props.history.push(\"/\")}>\n                Home Page\n            </button>\n\n            <article className=\"contactList\">\n                {\n                    contacts.map(contact => {\n                        return <Link key={contact.id} to={`/contacts/${contact.id}`}>\n                            <h3>{contact.name}</h3>\n                            <h3>{contact.phone}</h3>\n                        </Link>\n                    })\n                }\n            </article>\n        </div>\n    )\n}","/Users/susan/workspace/d-limit-frontend/src/components/home/Home.js",["101","102"],"import React, { useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { EventContext } from \"../eventDrinks/EventDrinkProvider\";\nimport \"./home.css\" \n\nexport const Home = (props) => {\n  const { addEvent, getEvents } = useContext(EventContext);\n\n  const currentEventId = localStorage.getItem(\"currentEvent\");\n\n  const startDrinking = () => {\n    addEvent().then((newEvent) => {\n      return props.history.push(`/drinking/${newEvent.id}`);\n    });\n  };\n\n  const continueDrinking = () => {\n      return props.history.push(`/drinking/${currentEventId}`);\n  };\n\n  \n  return (\n    <section>\n      <h1 className=\"home-title\">Home Page</h1>\n      <div>\n          <Link className=\"edit-profile-button\" to=\"/edit/profile\">Edit Profile</Link>\n      </div>\n      <div>\n          <Link className=\"edit-contacts-button\" to=\"/contacts\">Edit Contacts</Link>\n      </div>\n      <div>\n        {currentEventId && (\n          <button className=\"continue-drinking-button\" onClick={continueDrinking} id=\"continue--drinking\">\n            Continue Drinking\n          </button>\n        )}\n\n        {!currentEventId && (\n          <button className=\"start--drinking--button\" onClick={startDrinking} id=\"start--drinking\">\n            Start Drinking\n          </button>\n        )}  \n      </div>\n    </section>\n  );\n};\n","/Users/susan/workspace/d-limit-frontend/src/components/contacts/ContactProvider.js",["103"],"/Users/susan/workspace/d-limit-frontend/src/components/eventDrinks/Event.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":16,"column":6,"nodeType":"114","endLine":16,"endColumn":8,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"117","line":1,"column":37,"nodeType":"110","messageId":"111","endLine":1,"endColumn":46},{"ruleId":"112","severity":1,"message":"118","line":16,"column":6,"nodeType":"114","endLine":16,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":8,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"122","line":1,"column":40,"nodeType":"110","messageId":"111","endLine":1,"endColumn":46},{"ruleId":"112","severity":1,"message":"123","line":28,"column":6,"nodeType":"114","endLine":28,"endColumn":8,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"125","line":11,"column":9,"nodeType":"114","endLine":11,"endColumn":11,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"116","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"127","line":14,"column":8,"nodeType":"114","endLine":14,"endColumn":10,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"129","line":21,"column":6,"nodeType":"114","endLine":21,"endColumn":8,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"131","line":11,"column":8,"nodeType":"114","endLine":11,"endColumn":10,"suggestions":"132"},{"ruleId":"108","severity":1,"message":"117","line":1,"column":29,"nodeType":"110","messageId":"111","endLine":1,"endColumn":38},{"ruleId":"108","severity":1,"message":"133","line":7,"column":21,"nodeType":"110","messageId":"111","endLine":7,"endColumn":30},{"ruleId":"108","severity":1,"message":"117","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getContact' and 'props.match.params.contactId'. Either include them or remove the dependency array.","ArrayExpression",["136"],"'moment' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'eventId', 'getDrinks', 'getEvent', and 'getEventDrinks'. Either include them or remove the dependency array.",["138"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'eventId', 'getContacts', 'getEvent', 'getEventDrinks', and 'getUser'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has a missing dependency: 'getDrinks'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'eventId', 'getDrinks', and 'getEventDrinks'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'getContacts'. Either include it or remove the dependency array.",["143"],"'getEvents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [getContact, props.match.params.contactId]",{"range":"160","text":"161"},"Update the dependencies array to be: [getUser]",{"range":"162","text":"163"},"Update the dependencies array to be: [eventId, getDrinks, getEvent, getEventDrinks]",{"range":"164","text":"165"},"Update the dependencies array to be: [eventId, getContacts, getEvent, getEventDrinks, getUser]",{"range":"166","text":"167"},"Update the dependencies array to be: [getEvents]",{"range":"168","text":"169"},"Update the dependencies array to be: [getDrinks]",{"range":"170","text":"171"},"Update the dependencies array to be: [eventId, getDrinks, getEventDrinks]",{"range":"172","text":"173"},"Update the dependencies array to be: [getContacts]",{"range":"174","text":"175"},[626,628],"[getContact, props.match.params.contactId]",[573,575],"[getUser]",[498,500],"[eventId, getDrinks, getEvent, getEventDrinks]",[861,863],"[eventId, getContacts, getEvent, getEventDrinks, getUser]",[274,276],"[getEvents]",[426,428],"[getDrinks]",[489,491],"[eventId, getDrinks, getEventDrinks]",[323,325],"[getContacts]"]